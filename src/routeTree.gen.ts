/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as AdminDashboardImport } from './routes/admin-dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as RulesTopicnameImport } from './routes/rules/$topic_name'
import { Route as QuizTopicnameImport } from './routes/quiz/$topic_name'
import { Route as AnalysisTopicnameImport } from './routes/analysis/$topic_name'
import { Route as RulesTopicnameTopicidImport } from './routes/rules/$topic_name/$topic_id'
import { Route as QuizTopicnameTopicidImport } from './routes/quiz/$topic_name/$topic_id'
import { Route as AnalysisTopicnameTopicidImport } from './routes/analysis/$topic_name/$topic_id'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  id: '/admin-dashboard',
  path: '/admin-dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RulesTopicnameRoute = RulesTopicnameImport.update({
  id: '/rules/$topic_name',
  path: '/rules/$topic_name',
  getParentRoute: () => rootRoute,
} as any)

const QuizTopicnameRoute = QuizTopicnameImport.update({
  id: '/quiz/$topic_name',
  path: '/quiz/$topic_name',
  getParentRoute: () => rootRoute,
} as any)

const AnalysisTopicnameRoute = AnalysisTopicnameImport.update({
  id: '/analysis/$topic_name',
  path: '/analysis/$topic_name',
  getParentRoute: () => rootRoute,
} as any)

const RulesTopicnameTopicidRoute = RulesTopicnameTopicidImport.update({
  id: '/$topic_id',
  path: '/$topic_id',
  getParentRoute: () => RulesTopicnameRoute,
} as any)

const QuizTopicnameTopicidRoute = QuizTopicnameTopicidImport.update({
  id: '/$topic_id',
  path: '/$topic_id',
  getParentRoute: () => QuizTopicnameRoute,
} as any)

const AnalysisTopicnameTopicidRoute = AnalysisTopicnameTopicidImport.update({
  id: '/$topic_id',
  path: '/$topic_id',
  getParentRoute: () => AnalysisTopicnameRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin-dashboard': {
      id: '/admin-dashboard'
      path: '/admin-dashboard'
      fullPath: '/admin-dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/analysis/$topic_name': {
      id: '/analysis/$topic_name'
      path: '/analysis/$topic_name'
      fullPath: '/analysis/$topic_name'
      preLoaderRoute: typeof AnalysisTopicnameImport
      parentRoute: typeof rootRoute
    }
    '/quiz/$topic_name': {
      id: '/quiz/$topic_name'
      path: '/quiz/$topic_name'
      fullPath: '/quiz/$topic_name'
      preLoaderRoute: typeof QuizTopicnameImport
      parentRoute: typeof rootRoute
    }
    '/rules/$topic_name': {
      id: '/rules/$topic_name'
      path: '/rules/$topic_name'
      fullPath: '/rules/$topic_name'
      preLoaderRoute: typeof RulesTopicnameImport
      parentRoute: typeof rootRoute
    }
    '/analysis/$topic_name/$topic_id': {
      id: '/analysis/$topic_name/$topic_id'
      path: '/$topic_id'
      fullPath: '/analysis/$topic_name/$topic_id'
      preLoaderRoute: typeof AnalysisTopicnameTopicidImport
      parentRoute: typeof AnalysisTopicnameImport
    }
    '/quiz/$topic_name/$topic_id': {
      id: '/quiz/$topic_name/$topic_id'
      path: '/$topic_id'
      fullPath: '/quiz/$topic_name/$topic_id'
      preLoaderRoute: typeof QuizTopicnameTopicidImport
      parentRoute: typeof QuizTopicnameImport
    }
    '/rules/$topic_name/$topic_id': {
      id: '/rules/$topic_name/$topic_id'
      path: '/$topic_id'
      fullPath: '/rules/$topic_name/$topic_id'
      preLoaderRoute: typeof RulesTopicnameTopicidImport
      parentRoute: typeof RulesTopicnameImport
    }
  }
}

// Create and export the route tree

interface AnalysisTopicnameRouteChildren {
  AnalysisTopicnameTopicidRoute: typeof AnalysisTopicnameTopicidRoute
}

const AnalysisTopicnameRouteChildren: AnalysisTopicnameRouteChildren = {
  AnalysisTopicnameTopicidRoute: AnalysisTopicnameTopicidRoute,
}

const AnalysisTopicnameRouteWithChildren =
  AnalysisTopicnameRoute._addFileChildren(AnalysisTopicnameRouteChildren)

interface QuizTopicnameRouteChildren {
  QuizTopicnameTopicidRoute: typeof QuizTopicnameTopicidRoute
}

const QuizTopicnameRouteChildren: QuizTopicnameRouteChildren = {
  QuizTopicnameTopicidRoute: QuizTopicnameTopicidRoute,
}

const QuizTopicnameRouteWithChildren = QuizTopicnameRoute._addFileChildren(
  QuizTopicnameRouteChildren,
)

interface RulesTopicnameRouteChildren {
  RulesTopicnameTopicidRoute: typeof RulesTopicnameTopicidRoute
}

const RulesTopicnameRouteChildren: RulesTopicnameRouteChildren = {
  RulesTopicnameTopicidRoute: RulesTopicnameTopicidRoute,
}

const RulesTopicnameRouteWithChildren = RulesTopicnameRoute._addFileChildren(
  RulesTopicnameRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin-dashboard': typeof AdminDashboardRoute
  '/auth': typeof AuthRoute
  '/analysis/$topic_name': typeof AnalysisTopicnameRouteWithChildren
  '/quiz/$topic_name': typeof QuizTopicnameRouteWithChildren
  '/rules/$topic_name': typeof RulesTopicnameRouteWithChildren
  '/analysis/$topic_name/$topic_id': typeof AnalysisTopicnameTopicidRoute
  '/quiz/$topic_name/$topic_id': typeof QuizTopicnameTopicidRoute
  '/rules/$topic_name/$topic_id': typeof RulesTopicnameTopicidRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin-dashboard': typeof AdminDashboardRoute
  '/auth': typeof AuthRoute
  '/analysis/$topic_name': typeof AnalysisTopicnameRouteWithChildren
  '/quiz/$topic_name': typeof QuizTopicnameRouteWithChildren
  '/rules/$topic_name': typeof RulesTopicnameRouteWithChildren
  '/analysis/$topic_name/$topic_id': typeof AnalysisTopicnameTopicidRoute
  '/quiz/$topic_name/$topic_id': typeof QuizTopicnameTopicidRoute
  '/rules/$topic_name/$topic_id': typeof RulesTopicnameTopicidRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin-dashboard': typeof AdminDashboardRoute
  '/auth': typeof AuthRoute
  '/analysis/$topic_name': typeof AnalysisTopicnameRouteWithChildren
  '/quiz/$topic_name': typeof QuizTopicnameRouteWithChildren
  '/rules/$topic_name': typeof RulesTopicnameRouteWithChildren
  '/analysis/$topic_name/$topic_id': typeof AnalysisTopicnameTopicidRoute
  '/quiz/$topic_name/$topic_id': typeof QuizTopicnameTopicidRoute
  '/rules/$topic_name/$topic_id': typeof RulesTopicnameTopicidRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin-dashboard'
    | '/auth'
    | '/analysis/$topic_name'
    | '/quiz/$topic_name'
    | '/rules/$topic_name'
    | '/analysis/$topic_name/$topic_id'
    | '/quiz/$topic_name/$topic_id'
    | '/rules/$topic_name/$topic_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin-dashboard'
    | '/auth'
    | '/analysis/$topic_name'
    | '/quiz/$topic_name'
    | '/rules/$topic_name'
    | '/analysis/$topic_name/$topic_id'
    | '/quiz/$topic_name/$topic_id'
    | '/rules/$topic_name/$topic_id'
  id:
    | '__root__'
    | '/'
    | '/admin-dashboard'
    | '/auth'
    | '/analysis/$topic_name'
    | '/quiz/$topic_name'
    | '/rules/$topic_name'
    | '/analysis/$topic_name/$topic_id'
    | '/quiz/$topic_name/$topic_id'
    | '/rules/$topic_name/$topic_id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AuthRoute: typeof AuthRoute
  AnalysisTopicnameRoute: typeof AnalysisTopicnameRouteWithChildren
  QuizTopicnameRoute: typeof QuizTopicnameRouteWithChildren
  RulesTopicnameRoute: typeof RulesTopicnameRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AuthRoute: AuthRoute,
  AnalysisTopicnameRoute: AnalysisTopicnameRouteWithChildren,
  QuizTopicnameRoute: QuizTopicnameRouteWithChildren,
  RulesTopicnameRoute: RulesTopicnameRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin-dashboard",
        "/auth",
        "/analysis/$topic_name",
        "/quiz/$topic_name",
        "/rules/$topic_name"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin-dashboard": {
      "filePath": "admin-dashboard.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/analysis/$topic_name": {
      "filePath": "analysis/$topic_name.tsx",
      "children": [
        "/analysis/$topic_name/$topic_id"
      ]
    },
    "/quiz/$topic_name": {
      "filePath": "quiz/$topic_name.tsx",
      "children": [
        "/quiz/$topic_name/$topic_id"
      ]
    },
    "/rules/$topic_name": {
      "filePath": "rules/$topic_name.tsx",
      "children": [
        "/rules/$topic_name/$topic_id"
      ]
    },
    "/analysis/$topic_name/$topic_id": {
      "filePath": "analysis/$topic_name/$topic_id.tsx",
      "parent": "/analysis/$topic_name"
    },
    "/quiz/$topic_name/$topic_id": {
      "filePath": "quiz/$topic_name/$topic_id.tsx",
      "parent": "/quiz/$topic_name"
    },
    "/rules/$topic_name/$topic_id": {
      "filePath": "rules/$topic_name/$topic_id.tsx",
      "parent": "/rules/$topic_name"
    }
  }
}
ROUTE_MANIFEST_END */
